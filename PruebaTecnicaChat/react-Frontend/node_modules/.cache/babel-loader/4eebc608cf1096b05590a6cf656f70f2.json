{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Documents\\\\Prueba\\\\Front\\\\JavaWebSocketReact\\\\react-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, IconButton, List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [sender, setSender] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Conectar al WebSocket\n    const socket = new SockJS('http://localhost:8084/api/v1/chat');\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      client.subscribe('/topic/messages', message => {\n        const receivedMessage = JSON.parse(message.body);\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      });\n    });\n    setStompClient(client); // Precargar los mensajes desde el servidor\n\n    fetch('http://localhost:8084/api/v1/chat/class/messages').then(response => response.json()).then(data => {\n      setMessages(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching messages:', error);\n      setLoading(false);\n    });\n    return () => {\n      client.disconnect();\n    };\n  }, []);\n\n  const handleSenderChange = event => {\n    setSender(event.target.value);\n  };\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      const chatMessage = {\n        sender,\n        content: message\n      };\n      stompClient.send('/app/room', {}, JSON.stringify(chatMessage));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: msg.sender.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this),\n          secondary: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Enter your sender\",\n          value: sender,\n          onChange: handleSenderChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Type a message\",\n          value: message,\n          onChange: handleMessageChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: sendMessage,\n          disabled: !message.trim(),\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YFG13aUPm92XLVi/cHqv7nUZRjU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/marco/Documents/Prueba/Front/JavaWebSocketReact/react-client/src/App.js"],"names":["React","useState","useEffect","TextField","IconButton","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","Stomp","SockJS","App","messages","setMessages","message","setMessage","sender","setSender","stompClient","setStompClient","loading","setLoading","socket","client","over","connect","subscribe","receivedMessage","JSON","parse","body","prevMessages","fetch","then","response","json","data","catch","error","console","disconnect","handleSenderChange","event","target","value","handleMessageChange","sendMessage","trim","chatMessage","content","send","stringify","length","map","msg","index","charAt","display","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [sender, setSender] = useState('');\r\n  const [stompClient, setStompClient] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Conectar al WebSocket\r\n    const socket = new SockJS('http://localhost:8084/api/v1/chat');\r\n    const client = Stomp.over(socket);\r\n\r\n    client.connect({}, () => {\r\n      client.subscribe('/topic/messages', (message) => {\r\n        const receivedMessage = JSON.parse(message.body);\r\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n      });\r\n    });\r\n\r\n    setStompClient(client);\r\n\r\n    // Precargar los mensajes desde el servidor\r\n    fetch('http://localhost:8084/api/v1/chat/class/messages')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMessages(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching messages:', error);\r\n        setLoading(false);\r\n      });\r\n\r\n    return () => {\r\n      client.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSenderChange = (event) => {\r\n    setSender(event.target.value);\r\n  };\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      const chatMessage = {\r\n        sender,\r\n        content: message,\r\n      };\r\n\r\n      stompClient.send('/app/room', {}, JSON.stringify(chatMessage));\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Typography variant=\"subtitle1\">Loading...</Typography>\r\n      ) : (\r\n        <List>\r\n          {messages.length === 0 ? (\r\n            <Typography variant=\"subtitle1\">No messages yet</Typography>\r\n          ) : (\r\n            messages.map((msg, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemAvatar>\r\n                  <Avatar>{msg.sender.charAt(0)}</Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"subtitle1\">{msg.sender}</Typography>\r\n                  }\r\n                  secondary={msg.content}\r\n                />\r\n              </ListItem>\r\n            ))\r\n          )}\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <TextField\r\n              placeholder=\"Enter your sender\"\r\n              value={sender}\r\n              onChange={handleSenderChange}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              placeholder=\"Type a message\"\r\n              value={message}\r\n              onChange={handleMessageChange}\r\n              fullWidth\r\n            />\r\n            <IconButton onClick={sendMessage} disabled={!message.trim()}>\r\n              send\r\n            </IconButton>\r\n          </div>\r\n        </List>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}