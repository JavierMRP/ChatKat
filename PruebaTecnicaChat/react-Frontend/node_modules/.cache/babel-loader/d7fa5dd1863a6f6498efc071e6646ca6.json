{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\Documents\\\\Prueba\\\\Front\\\\JavaWebSocketReact\\\\react-client\\\\src\\\\components\\\\Chat.js\";\nimport React from 'react'; // Definición del componente\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  render() {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [sender, setSender] = useState('');\n    const [stompClient, setStompClient] = useState(null);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n      // Conectar al WebSocket\n      const socket = new SockJS('http://localhost:8084/api/v1/websocket');\n      const client = Stomp.over(socket);\n      client.connect({}, () => {\n        client.subscribe('/topic/messages', message => {\n          const receivedMessage = JSON.parse(message.body);\n          setMessages(prevMessages => [...prevMessages, receivedMessage]);\n        });\n      });\n      setStompClient(client); // Precargar los mensajes desde el servidor\n\n      fetch('http://localhost:8084/messages').then(response => response.json()).then(data => {\n        setMessages(data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching messages:', error);\n        setLoading(false);\n      });\n      return () => {\n        client.disconnect();\n      };\n    }, []);\n\n    const handleSenderChange = event => {\n      setSender(event.target.value);\n    };\n\n    const handleMessageChange = event => {\n      setMessage(event.target.value);\n    };\n\n    const sendMessage = () => {\n      if (message.trim()) {\n        const chatMessage = {\n          sender,\n          content: message\n        };\n        stompClient.send('/app/room', {}, JSON.stringify(chatMessage));\n        setMessage('');\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: msg.sender.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this),\n            secondary: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Enter your sender\",\n            value: sender,\n            onChange: handleSenderChange,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Type a message\",\n            value: message,\n            onChange: handleMessageChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: sendMessage,\n            disabled: !message.trim(),\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/marco/Documents/Prueba/Front/JavaWebSocketReact/react-client/src/components/Chat.js"],"names":["React","Chat","Component","render","messages","setMessages","useState","message","setMessage","sender","setSender","stompClient","setStompClient","loading","setLoading","useEffect","socket","SockJS","client","Stomp","over","connect","subscribe","receivedMessage","JSON","parse","body","prevMessages","fetch","then","response","json","data","catch","error","console","disconnect","handleSenderChange","event","target","value","handleMessageChange","sendMessage","trim","chatMessage","content","send","stringify","length","map","msg","index","charAt","display","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// Definición del componente\r\nclass Chat extends React.Component {\r\n  render() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [sender, setSender] = useState('');\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Conectar al WebSocket\r\n        const socket = new SockJS('http://localhost:8084/api/v1/websocket');\r\n        const client = Stomp.over(socket);\r\n\r\n        client.connect({}, () => {\r\n        client.subscribe('/topic/messages', (message) => {\r\n            const receivedMessage = JSON.parse(message.body);\r\n            setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n        });\r\n        });\r\n\r\n        setStompClient(client);\r\n\r\n        // Precargar los mensajes desde el servidor\r\n        fetch('http://localhost:8084/messages')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setMessages(data);\r\n            setLoading(false);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching messages:', error);\r\n            setLoading(false);\r\n        });\r\n\r\n        return () => {\r\n        client.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const handleSenderChange = (event) => {\r\n        setSender(event.target.value);\r\n    };\r\n\r\n    const handleMessageChange = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (message.trim()) {\r\n        const chatMessage = {\r\n            sender,\r\n            content: message,\r\n        };\r\n\r\n        stompClient.send('/app/room', {}, JSON.stringify(chatMessage));\r\n        setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {loading ? (\r\n            <Typography variant=\"subtitle1\">Loading...</Typography>\r\n        ) : (\r\n            <List>\r\n            {messages.length === 0 ? (\r\n                <Typography variant=\"subtitle1\">No messages yet</Typography>\r\n            ) : (\r\n                messages.map((msg, index) => (\r\n                <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                    <Avatar>{msg.sender.charAt(0)}</Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                    primary={\r\n                        <Typography variant=\"subtitle1\">{msg.sender}</Typography>\r\n                    }\r\n                    secondary={msg.content}\r\n                    />\r\n                </ListItem>\r\n                ))\r\n            )}\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <TextField\r\n                placeholder=\"Enter your sender\"\r\n                value={sender}\r\n                onChange={handleSenderChange}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                placeholder=\"Type a message\"\r\n                value={message}\r\n                onChange={handleMessageChange}\r\n                fullWidth\r\n                />\r\n                <IconButton onClick={sendMessage} disabled={!message.trim()}>\r\n                send\r\n                </IconButton>\r\n            </div>\r\n            </List>\r\n        )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat; "]},"metadata":{},"sourceType":"module"}